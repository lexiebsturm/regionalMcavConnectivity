cubaShallowK4$ord=1:nrow(cubaShallowK4)
cubaMesoK4=filter(k4Admix, regionDepth == "CUBAMesophotic") %>% arrange(-cluster2, cluster1)
sum(cubaMesoK4$cluster1)
sum(cubaMesoK4$cluster2)
sum(cubaMesoK4$cluster3)
sum(cubaMesoK4$cluster4)
cubaMesoK4$ord=77:78
meltcubaShallowK4 = melt(cubaShallowK4, id.vars=c("sample", "site", "pop", "region", "depthM", "depthZone", "dateCollected", "lat", "lon", "regionDepth", "ord"), variable.name="ancestry", value.name="fraction")
meltcubaMesoK4 = melt(cubaMesoK4, id.vars=c("sample", "site", "pop", "region", "depthM", "depthZone", "dateCollected", "lat", "lon", "regionDepth", "ord"), variable.name="ancestry", value.name="fraction")
cubaK4ShallowPlot = ggplot( meltcubaShallowK4, aes(x=ord, y=fraction, fill=factor(ancestry, levels=c("cluster4", "cluster1", "cluster2", "cluster3")))) +
geom_bar(stat="identity", position="fill", width=1) +
facet_grid(.~depthZone, labeller = shapeLabs, scales = "free", switch = "x", space = "free") +
#labs(x = "Population", y = "Ancestry") +
ggtitle("Cuba") +
theme(plot.title = element_blank(),
plot.background=element_blank(),
panel.grid=element_blank(),
panel.background=element_rect(fill=NA),
panel.spacing.x=grid:::unit(0, "lines"),
panel.border = element_rect(fill=NA,color="black", size=2, linetype="solid"),
#axis.text.x=element_text(size=12, angle=90)
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
strip.background=element_blank(),
strip.text=element_text(size=15, color = "#94D0FFFF", vjust=2),
legend.key=element_blank(),
legend.position = "none",
legend.title = element_blank()) +
scale_x_discrete(expand=c(0, 0)) +
scale_y_continuous(expand=c(0, 0)) +
scale_fill_manual(values = c("cluster1"="#440154FF", "cluster2"="#31688EFF", "cluster3"="#35B779FF", "cluster4"="#FDE725FF"), name = "Cluster") +
#scale_fill_manual(values = colPal3, name = "Cluster") +
guides(fill=guide_legend(override.aes=list(colour=NULL)))
cubaK4ShallowPlot
cubaK4MesoPlot = ggplot( meltcubaMesoK4, aes(x=ord, y=fraction, fill=factor(ancestry, levels=c("cluster4", "cluster1", "cluster2", "cluster3")))) +
geom_bar(stat="identity", position="fill", width=1) +
facet_grid(.~depthZone, labeller = shapeLabs, scales = "free", switch = "x", space = "free") +
#labs(x = "Population", y = "Ancestry") +
ggtitle("Cuba") +
theme(plot.title = element_blank(),
plot.background=element_blank(),
panel.grid=element_blank(),
panel.background=element_rect(fill=NA),
panel.spacing.x=grid:::unit(0, "lines"),
panel.border = element_rect(fill=NA,color="black", size=2, linetype="solid"),
#axis.text.x=element_text(size=12, angle=90)
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
strip.background=element_blank(),
strip.text=element_text(size=15, color = "#94D0FFFF", vjust=2),
legend.key=element_blank(),
legend.position = "none",
legend.title = element_blank()) +
scale_x_discrete(expand=c(0, 0)) +
scale_y_continuous(expand=c(0, 0)) +
scale_fill_manual(values = c("cluster1"="#440154FF", "cluster2"="#31688EFF", "cluster3"="#35B779FF", "cluster4"="#FDE725FF"), name = "Cluster") +
#scale_fill_manual(values = colPal3, name = "Cluster") +
guides(fill=guide_legend(override.aes=list(colour=NULL)))
cubaK4MesoPlot
###############
drtShallowK4=filter(k4Admix, regionDepth == "DRTShallow") %>% arrange(-cluster4, cluster1)
sum(drtShallowK4$cluster1)
sum(drtShallowK4$cluster2)
sum(drtShallowK4$cluster3)
sum(drtShallowK4$cluster4)
drtShallowK4$ord=1:nrow(drtShallowK4)
drtMesoK4=filter(k4Admix, regionDepth == "DRTMesophotic") %>% arrange(-cluster2, cluster4)
sum(drtMesoK4$cluster1)
sum(drtMesoK4$cluster2)
sum(drtMesoK4$cluster3)
sum(drtMesoK4$cluster4)
drtMesoK4$ord=56:115
drtAdmix=bind_rows(drtShallowK4, drtMesoK4)
meltdrtK4 = melt(drtAdmix, id.vars=c("sample", "site", "pop", "region", "depthM", "depthZone", "dateCollected", "lat", "lon", "regionDepth", "ord"), variable.name="ancestry", value.name="fraction")
meltdrtK4$depthZone = factor(meltdrtK4$depthZone, levels = levels(meltdrtK4$depthZone)[c(2,1)])
drtK4Plot = ggplot(meltdrtK4, aes(x=ord, y=fraction, fill=factor(ancestry, levels=c("cluster3","cluster1","cluster2","cluster4")))) +
geom_bar(stat="identity", position="fill", width=1) +
facet_grid(.~depthZone, labeller = shapeLabs, scales = "free", switch = "x", space = "free") +
#labs(x = "Population", y = "Ancestry") +
ggtitle("Dry Tortugas") +
theme(plot.title = element_blank(),
plot.background=element_blank(),
panel.grid=element_blank(),
panel.background=element_rect(fill=NA),
panel.spacing.x=grid:::unit(0, "lines"),
panel.border = element_rect(fill=NA,color="black", size=2, linetype="solid"),
#axis.text.x=element_text(size=12, angle=90)
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
strip.background=element_blank(),
strip.text=element_text(size=15, color = "#FFDE8BFF", vjust=2),
legend.key=element_blank(),
legend.position = "none",
legend.title = element_blank()) +
scale_x_discrete(expand=c(0, 0)) +
scale_y_continuous(expand=c(0, 0)) +
scale_fill_manual(values = c("cluster1"="#440154FF", "cluster2"="#31688EFF", "cluster3"="#35B779FF", "cluster4"="#FDE725FF"), name = "Cluster") +
#scale_fill_manual(values = colPal3, name = "Cluster") +
guides(fill=guide_legend(override.aes=list(colour=NULL)))
drtK4Plot
###############
fkShallowK4=filter(k4Admix, regionDepth == "FKShallow") %>% arrange(-cluster2, cluster4)
sum(fkShallowK4$cluster1)
sum(fkShallowK4$cluster2)
sum(fkShallowK4$cluster3)
sum(fkShallowK4$cluster4)
fkShallowK4$ord=1:nrow(fkShallowK4)
fkMesoK4=filter(k4Admix, regionDepth == "FKMesophotic") %>% arrange(-cluster2, cluster4)
sum(fkMesoK4$cluster1)
sum(fkMesoK4$cluster2)
sum(fkMesoK4$cluster3)
sum(fkMesoK4$cluster4)
fkMesoK4$ord=63:100
fkAdmix=bind_rows(fkShallowK4, fkMesoK4)
meltfkK4 = melt(fkAdmix, id.vars=c("sample", "site", "pop", "region", "depthM", "depthZone", "dateCollected", "lat", "lon", "regionDepth", "ord"), variable.name="ancestry", value.name="fraction")
meltfkK4$depthZone = factor(meltfkK4$depthZone, levels = levels(meltfkK4$depthZone)[c(2,1)])
fkK4Plot = ggplot(meltfkK4, aes(x=ord, y=fraction, fill=factor(ancestry, levels=c("cluster3","cluster1","cluster2","cluster4")))) +
geom_bar(stat="identity", position="fill", width=1) +
facet_grid(.~depthZone, labeller = shapeLabs, scales = "free", switch = "x", space = "free") +
#labs(x = "Population", y = "Ancestry") +
ggtitle("Florida Keys") +
theme(plot.title = element_blank(),
plot.background=element_blank(),
panel.grid=element_blank(),
panel.background=element_rect(fill="black"),
panel.spacing.x=grid:::unit(0, "lines"),
panel.border = element_rect(fill=NA,color="black", size=2, linetype="solid"),
#axis.text.x=element_text(size=12, angle=90)
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
strip.background=element_blank(),
strip.text=element_text(size=15, color = "#FFA58BFF", vjust=2),
legend.key=element_blank(),
legend.position = "none",
legend.title = element_blank()) +
scale_x_discrete(expand=c(0, 0)) +
scale_y_continuous(expand=c(0, 0)) +
scale_fill_manual(values = c("cluster1"="#440154FF", "cluster2"="#31688EFF", "cluster3"="#35B779FF", "cluster4"="#FDE725FF"), name = "Cluster") +
#scale_fill_manual(values = colPal3, name = "Cluster") +
guides(fill=guide_legend(override.aes=list(colour=NULL)))
fkK4Plot
###############
sgomShallowK4=filter(k4Admix, regionDepth == "SGOMShallow") %>% arrange(-cluster1, cluster4)
sum(sgomShallowK4$cluster1)
sum(sgomShallowK4$cluster2)
sum(sgomShallowK4$cluster3)
sum(sgomShallowK4$cluster4)
sgomShallowK4$ord=1:nrow(sgomShallowK4)
sgomMesoK4=filter(k4Admix, regionDepth == "SGOMMesophotic") %>% arrange(-cluster2, cluster4)
sum(sgomMesoK4$cluster1)
sum(sgomMesoK4$cluster2)
sum(sgomMesoK4$cluster3)
sum(sgomMesoK4$cluster4)
sgomMesoK4$ord=72:97
sgomAdmix=bind_rows(sgomShallowK4, sgomMesoK4)
meltsgomK4 = melt(sgomAdmix, id.vars=c("sample", "site", "pop", "region", "depthM", "depthZone", "dateCollected", "lat", "lon", "regionDepth", "ord"), variable.name="ancestry", value.name="fraction")
meltsgomK4$depthZone = factor(meltsgomK4$depthZone, levels = levels(meltsgomK4$depthZone)[c(2,1)])
sgomK4Plot = ggplot(meltsgomK4, aes(x=ord, y=fraction, fill=factor(ancestry, levels=c("cluster3", "cluster4","cluster2","cluster1")))) +
geom_bar(stat="identity", position="fill", width=1) +
facet_grid(.~depthZone, labeller = shapeLabs, scales = "free", switch = "x", space = "free") +
#labs(x = "Population", y = "Ancestry") +
ggtitle("Southern Gulf of Mexico") +
theme(plot.title = element_blank(),
plot.background=element_blank(),
panel.grid=element_blank(),
panel.background=element_rect(fill="black"),
panel.spacing.x=grid:::unit(0, "lines"),
panel.border = element_rect(fill=NA,color="black", size=2, linetype="solid"),
#axis.text.x=element_text(size=12, angle=90)
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
strip.background=element_blank(),
strip.text=element_text(size=15, color = "#966BFFFF", vjust=2),
legend.key=element_blank(),
legend.position = "none",
legend.title = element_blank()) +
scale_x_discrete(expand=c(0, 0)) +
scale_y_continuous(expand=c(0, 0)) +
scale_fill_manual(values = c("cluster1"="#440154FF", "cluster2"="#31688EFF", "cluster3"="#35B779FF", "cluster4"="#FDE725FF"), name = "Cluster") +
#scale_fill_manual(values = colPal3, name = "Cluster") +
guides(fill=guide_legend(override.aes=list(colour=NULL)))
sgomK4Plot
###############
###############
nwgomShallowK4=filter(k4Admix, regionDepth == "NWGOMShallow") %>% arrange(-cluster1, cluster2)
sum(nwgomShallowK4$cluster1)
sum(nwgomShallowK4$cluster2)
sum(nwgomShallowK4$cluster3)
sum(nwgomShallowK4$cluster4)
nwgomShallowK4$ord=1:nrow(nwgomShallowK4)
nwgomMesoK4=filter(k4Admix, regionDepth == "NWGOMMesophotic") %>% arrange(-cluster1, cluster2)
sum(nwgomMesoK4$cluster1)
sum(nwgomMesoK4$cluster2)
sum(nwgomMesoK4$cluster3)
sum(nwgomMesoK4$cluster4)
nwgomMesoK4$ord=54:157
nwgomAdmix=bind_rows(nwgomShallowK4, nwgomMesoK4)
meltnwgomK4 = melt(nwgomAdmix, id.vars=c("sample", "site", "pop", "region", "depthM", "depthZone", "dateCollected", "lat", "lon", "regionDepth", "ord"), variable.name="ancestry", value.name="fraction")
meltnwgomK4$depthZone = factor(meltnwgomK4$depthZone, levels = levels(meltnwgomK4$depthZone)[c(2,1)])
nwgomK4Plot = ggplot(meltnwgomK4, aes(x=ord, y=fraction, fill=factor(ancestry, levels=c("cluster3", "cluster4","cluster2","cluster1")))) +
geom_bar(stat="identity", position="fill", width=1) +
facet_grid(.~depthZone, labeller = shapeLabs, scales = "free", switch = "x", space = "free") +
#labs(x = "Population", y = "Ancestry") +
ggtitle("Northwest Gulf of Mexico") +
theme(plot.title = element_blank(),
plot.background=element_blank(),
panel.grid=element_blank(),
panel.background=element_rect(fill="black"),
panel.spacing.x=grid:::unit(0, "lines"),
panel.border = element_rect(fill=NA,color="black", size=2, linetype="solid"),
#axis.text.x=element_text(size=12, angle=90)
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
strip.background=element_blank(),
strip.text=element_text(size=15, color = "#C774E8FF" , vjust=2),
legend.key=element_blank(),
legend.position = "none",
legend.title = element_blank()) +
scale_x_discrete(expand=c(0, 0)) +
scale_y_continuous(expand=c(0, 0)) +
scale_fill_manual(values = c("cluster1"="#440154FF", "cluster2"="#31688EFF", "cluster3"="#35B779FF", "cluster4"="#FDE725FF"), name = "Cluster") +
#scale_fill_manual(values = colPal3, name = "Cluster") +
guides(fill=guide_legend(override.aes=list(colour=NULL)))
nwgomK4Plot
###############
###############
seflShallowK4=filter(k4Admix, regionDepth == "SEFLShallow") %>% arrange(-cluster3, cluster2)
sum(seflShallowK4$cluster1)
sum(seflShallowK4$cluster2)
sum(seflShallowK4$cluster3)
sum(seflShallowK4$cluster4)
seflShallowK4$ord=1:nrow(seflShallowK4)
meltseflK4 = melt(seflShallowK4, id.vars=c("sample", "site", "pop", "region", "depthM", "depthZone", "dateCollected", "lat", "lon", "regionDepth", "ord"), variable.name="ancestry", value.name="fraction")
seflK4Plot = ggplot(meltseflK4, aes(x=ord, y=fraction, fill=factor(ancestry, levels=c("cluster4", "cluster1","cluster2","cluster3")))) +
geom_bar(stat="identity", position="fill", width=1) +
facet_grid(.~depthZone, labeller = shapeLabs, scales = "free", switch = "x", space = "free") +
#labs(x = "Population", y = "Ancestry") +
ggtitle("Southeast Florida") +
theme(plot.title = element_blank(),
plot.background=element_blank(),
panel.grid=element_blank(),
panel.background=element_rect(fill=NA),
panel.spacing.x=grid:::unit(0, "lines"),
panel.border = element_rect(fill=NA,color="black", size=2, linetype="solid"),
#axis.text.x=element_text(size=12, angle=90)
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
strip.background=element_blank(),
strip.text=element_text(size=15, color = "#FF6AD5FF", vjust=2),
legend.key=element_blank(),
legend.position = "none",
legend.title = element_blank()) +
scale_x_discrete(expand=c(0, 0)) +
scale_y_continuous(expand=c(0, 0)) +
scale_fill_manual(values = c("cluster1"="#440154FF", "cluster2"="#31688EFF", "cluster3"="#35B779FF", "cluster4"="#FDE725FF"), name = "Cluster") +
#scale_fill_manual(values = colPal3, name = "Cluster") +
guides(fill=guide_legend(override.aes=list(colour=NULL)))
seflK4Plot
###############
###############
prgMesoK4=filter(k4Admix, regionDepth == "PRGMesophotic") %>% arrange(-cluster1, cluster3)
sum(prgMesoK4$cluster1)
sum(prgMesoK4$cluster2)
sum(prgMesoK4$cluster3)
sum(prgMesoK4$cluster4)
prgMesoK4$ord=1:nrow(prgMesoK4)
meltprgK4 = melt(prgMesoK4, id.vars=c("sample", "site", "pop", "region", "depthM", "depthZone", "dateCollected", "lat", "lon", "regionDepth", "ord"), variable.name="ancestry", value.name="fraction")
prgK4Plot = ggplot(meltprgK4, aes(x=ord, y=fraction, fill=factor(ancestry, levels=c("cluster4", "cluster2","cluster3","cluster1")))) +
geom_bar(stat="identity", position="fill", width=1) +
facet_grid(.~depthZone, labeller = shapeLabs, scales = "free", switch = "x", space = "free") +
#labs(x = "Population", y = "Ancestry") +
ggtitle("Pulley Ridge") +
theme(plot.title = element_blank(),
plot.background=element_blank(),
panel.grid=element_blank(),
panel.background=element_rect(fill=NA),
panel.spacing.x=grid:::unit(0, "lines"),
panel.border = element_rect(fill=NA,color="black", size=2, linetype="solid"),
#axis.text.x=element_text(size=12, angle=90)
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
strip.background=element_blank(),
strip.text=element_text(size=15, color = "#20DE8BFF", vjust=2),
legend.key=element_blank(),
legend.position = "none",
legend.title = element_blank()) +
scale_x_discrete(expand=c(0, 0)) +
scale_y_continuous(expand=c(0, 0)) +
scale_fill_manual(values = c("cluster1"="#440154FF", "cluster2"="#31688EFF", "cluster3"="#35B779FF", "cluster4"="#FDE725FF"), name = "Cluster") +
#scale_fill_manual(values = colPal3, name = "Cluster") +
guides(fill=guide_legend(override.aes=list(colour=NULL)))
prgK4Plot
###############
colPal = c(paletteer_d("vapeplot::vaporwave")[c(7,10,11,14,1,5,3)], "slateblue4")
sites = read.csv("regionalInds2popsNoClones.csv", header = TRUE)
#sites$depthZone=as.factor(sites$depthZone)
sites$depthZone = factor(sites$depthZone, levels = levels(sites$depthZone)[c(2,1)])
sites$region = factor(sites$region, levels = levels(sites$region)[c(7, 4, 3, 6, 2, 5, 8, 1)])
reefs = sites %>% group_by(region) %>% dplyr::summarize(lat = mean(lat), lon = mean(lon))
gomCountries = st_as_sf(ne_countries(country = c("United States of America", "Cuba", "Mexico", "The Bahamas", "Belize", "Guatemala", "Cayman Islands"), scale = "Large"))
###############
colPal = c(paletteer_d("vapeplot::vaporwave")[c(7,10,11,14,1,5,3)], "slateblue4")
sites = read.csv("../data/regionalInds2popsNoClones.csv", header = TRUE)
#sites$depthZone=as.factor(sites$depthZone)
sites$depthZone = factor(sites$depthZone, levels = levels(sites$depthZone)[c(2,1)])
sites$region = factor(sites$region, levels = levels(sites$region)[c(7, 4, 3, 6, 2, 5, 8, 1)])
reefs = sites %>% group_by(region) %>% dplyr::summarize(lat = mean(lat), lon = mean(lon))
gomCountries = st_as_sf(ne_countries(country = c("United States of America", "Cuba", "Mexico", "The Bahamas", "Belize", "Guatemala", "Cayman Islands"), scale = "Large"))
admixMapA = ggplot() +
geom_sf(data = gomCountries, fill = "white", size = 0.25) +
geom_point(data = reefs, aes(x = lon, y = lat, fill = region), size = 3, shape=21) +
geom_point(data = sites, aes(x = lon, y = lat, fill = region, shape=depthZone), size = 1, fill=NA, alpha=0) +
scale_fill_manual(values = colPal, name = "Site")+
scale_shape_manual(values = c(24,25), name = "Depth Zone") +
coord_sf(xlim = c(-99, -75), ylim = c(16, 30)) +
scale_x_continuous(breaks = c(seq(-99, -75, by = 2))) +
scale_y_continuous(breaks = c(seq(16, 30, by = 2))) +
annotation_scale(location = "bl") +
annotation_north_arrow(location = "tr", which_north = "true", style = north_arrow_minimal()) +
guides(fill = guide_legend(override.aes = list(shape = 22, color = NA, size = 4), ncol=2, order = 1), shape = guide_legend(override.aes = list(size = 4, alpha=1), order = 2)) +
#guides(fill = guide_legend(override.aes = list(shape = 21, size = 4), order = 1))+ #,
#shape = guide_legend(order=2),
#color = guide_legend(title=NULL, order = 3))+ #override.aes = list(fill=NA),
theme_bw() +
theme(plot.title = element_text(size = 9) ,
panel.background = element_rect(fill = "aliceblue"),
plot.background = element_rect(fill="white"),
axis.title = element_blank(),
legend.position = "bottom")
admixMapA
#0.002 times the number of samples for width
admixMap <-
ggdraw() +
draw_plot(admixMapA) +
draw_plot(blzK4Plot, x = 0.5, y = .18, width = .232, height = .15)+
draw_plot(cubaK4ShallowPlot, x = 0.60, y = .33, width = .152, height = .15)+
draw_plot(cubaK4MesoPlot, x = 0.73, y = .33, width = .03, height = .15)+
draw_plot(drtK4Plot, x = 0.38, y = .59, width = .23, height = .15)+
draw_plot(fkK4Plot, x = 0.72, y = .56, width=0.2, height=0.15)+
draw_plot(sgomK4Plot, x = 0.22, y = .46, width=0.194, height=0.15)+
draw_plot(nwgomK4Plot, x = 0.19, y = .82, width=0.314, height=0.15)+
draw_plot(prgK4Plot, x = 0.60, y = .71, width=0.044, height=0.15)+
draw_plot(seflK4Plot, x = 0.74, y = .70, width=0.132, height=0.15)
ggsave("../figures/fig5.png", plot = admixMap, width = 30, height = 20, units = "cm", dpi = 300)
fileList = substr(list.files("..data/ba3TraceFiles/", "BA3trace.*.txt$"),1,20)
bayesian_deviance <- function(trace, burnin = 0, sampling.interval = 0){
if(burnin == 0) stop('No burnin specified')
if(sampling.interval == 0) stop('No sampling interval specified')
range <- (trace$State > burnin & trace$State %% sampling.interval == 0)
D <- -2*mean(trace$LogProb[range])
return(D)
}
for(i in 1:length(fileList)){
assign(fileList[i], read.delim(paste("./ba3TraceFiles/", fileList[i], sep = ""))) %>% dplyr::select(-last_col())
print(paste(fileList[i], bayesian_deviance(get(fileList[i]), burnin = 9000000, sampling.interval = 100)))
}
for(i in 1:length(fileList)){
assign(fileList[i], read.delim(paste("../data/ba3TraceFiles/", fileList[i], sep = ""))) %>% dplyr::select(-last_col())
print(paste(fileList[i], bayesian_deviance(get(fileList[i]), burnin = 9000000, sampling.interval = 100)))
}
fileList = substr(list.files("../data/ba3TraceFiles/", "BA3trace.*.txt$"),1,20)
bayesian_deviance <- function(trace, burnin = 0, sampling.interval = 0){
if(burnin == 0) stop('No burnin specified')
if(sampling.interval == 0) stop('No sampling interval specified')
range <- (trace$State > burnin & trace$State %% sampling.interval == 0)
D <- -2*mean(trace$LogProb[range])
return(D)
}
for(i in 1:length(fileList)){
assign(fileList[i], read.delim(paste("../data/ba3TraceFiles/", fileList[i], sep = ""))) %>% dplyr::select(-last_col())
print(paste(fileList[i], bayesian_deviance(get(fileList[i]), burnin = 9000000, sampling.interval = 100)))
}
bayesAss = read.delim("./ba3TraceFiles/BA3trace12.txt") %>% filter(State > 9000000) %>% dplyr::select(-State, -LogProb, -X)
bayesAss = read.delim("../data/ba3TraceFiles/BA3trace12.txt") %>% filter(State > 9000000) %>% dplyr::select(-State, -LogProb, -X)
baMean = bayesAss %>% summarise(across(everything(), list(mean))) %>% t() %>% as_tibble() %>% rename(., mean=V1) %>% mutate(pops = colnames(bayesAss))
baSumm = bayesAss %>% summarise(across(everything(), list(median))) %>% t() %>% as.data.frame() %>% rename(., median=V1) %>% mutate(pops = baMean$pops, mean = round(baMean$mean, 3)) %>% relocate(median, .after = mean)
baSumm$median = round(baSumm$median, 3)
#Make sure teachingdemos package is installed
baHpd =as.data.frame(t(sapply(bayesAss, emp.hpd)))
colnames(baHpd) = c("hpdLow", "hpdHigh")
baHpd$pops = rownames(baHpd)
ESS = as.data.frame(sapply(bayesAss, ESS))
colnames(ESS) = "ESS"
baSumm = baSumm %>% left_join(baHpd)
baSumm$hpdLow = round(baSumm$hpdLow, 3)
baSumm$hpdHigh = round(baSumm$hpdHigh, 3)
baSumm$ESS = ESS$ESS
popi = rep(c("BLZ\nShallow", "BLZ\nMesophotic", "CUBA\nMesophotic", "CUBA\nShallow", "DRT\nMesophotic", "DRT\nShallow", "FK\nShallow", "FK\nMesophotic", "SGOM\nShallow", "SGOM\nMesophotic", "NWGOM\nMesophotic", "NWGOM\nShallow", "PRG\nMesophotic", "SEFL\nShallow"), each = 14)
popj = rep(c("BLZ\nShallow", "BLZ\nMesophotic", "CUBA\nMesophotic", "CUBA\nShallow", "DRT\nMesophotic", "DRT\nShallow", "FK\nShallow", "FK\nMesophotic", "SGOM\nShallow", "SGOM\nMesophotic", "NWGOM\nMesophotic", "NWGOM\nShallow", "PRG\nMesophotic", "SEFL\nShallow"), times = 14)
baSumm = baSumm %>% mutate(pop.i = popi, pop.j = popj) %>% relocate(c(pop.i, pop.j), .after = pops) %>% dplyr::select(-pops)
baSumm$pop.i = factor(baSumm$pop.i)
levels(baSumm$pop.i)
baSumm$pop.i = factor(baSumm$pop.i, levels = levels(baSumm$pop.i)[c(12, 8, 6, 4, 10, 14, 2, 7, 5, 11, 3, 9, 13, 1)])
baSumm$pop.j = factor(baSumm$pop.j)
baSumm$pop.j = factor(baSumm$pop.j, levels = levels(baSumm$pop.j)[c(12, 8, 6, 4, 10, 14, 2, 7, 5, 11, 3, 9, 13, 1)])
baSumm$site.i = word(baSumm$pop.i, 1, sep = "\n")
baSumm$site.i = factor(baSumm$site.i)
levels(baSumm$site.i)
baSumm$site.i = factor(baSumm$site.i, levels = levels(baSumm$site.i)[c(7, 4, 3, 6, 2, 5, 8, 1)])
baSumm$site.j = word(baSumm$pop.j, 1, sep = "\n")
baSumm$site.j = factor(baSumm$site.j)
baSumm$site.j = factor(baSumm$site.j, levels = levels(baSumm$site.j)[c(7, 4, 3, 6, 2, 5, 8, 1)])
baSumm$depth.i = word(baSumm$pop.i, 2, sep = "\n")
baSumm$depth.i = factor(baSumm$depth.i)
baSumm$depth.i = factor(baSumm$depth.i, levels = levels(baSumm$depth.i)[c(2, 1)])
baSumm$depth.j = word(baSumm$pop.j, 2, sep = "\n")
baSumm$depth.j = factor(baSumm$depth.j)
baSumm$depth.j = factor(baSumm$depth.j, levels = levels(baSumm$depth.j)[c(2, 1)])
#All sites (excluding self retention)
baMeans = baSumm %>% filter(pop.i != pop.j) %>% summarise(mean = mean(mean), sd = sd(.$mean), se = sd(.$mean)/sqrt(nrow(.))) %>% mutate(dataset = "Global")
#mesophotic sources
baMeans = baSumm %>% filter(pop.i != pop.j, depth.j == "Mesophotic") %>% summarise(mean = mean(mean), sd = sd(.$mean), se = sd(.$mean)/sqrt(nrow(.))) %>% mutate(dataset = "Mesophotic Source") %>% bind_rows(baMeans, .)
#shallow sources
baMeans = baSumm %>% filter(pop.i != pop.j, depth.j == "Shallow") %>% summarise(mean = mean(mean), sd = sd(.$mean), se = sd(.$mean)/sqrt(nrow(.))) %>% mutate(dataset = "Shallow Source") %>% bind_rows(baMeans, .)
#mesophotic sinks
baMeans = baSumm %>% filter(pop.i != pop.j, depth.i == "Mesophotic") %>% summarise(mean = mean(mean), sd = sd(.$mean), se = sd(.$mean)/sqrt(nrow(.)))  %>% mutate(dataset = "Mesophotic Sink") %>% bind_rows(baMeans, .)
#shallow sinks
baMeans = baSumm %>% filter(pop.i != pop.j, depth.i == "Shallow") %>% summarise(mean = mean(mean), sd = sd(.$mean), se = sd(.$mean)/sqrt(nrow(.)))  %>% mutate(dataset = "Shallow Sink") %>% bind_rows(baMeans, .)
#mesophotic -> shallow
baMeans = baSumm %>% filter(pop.i != pop.j, depth.j == "Mesophotic", depth.i == "Shallow") %>% summarise(mean = mean(mean), sd = sd(.$mean), se = sd(.$mean)/sqrt(nrow(.))) %>% mutate(dataset = "Mesophotic -> Shallow") %>% bind_rows(baMeans, .)
#mesophotic -> mesophotic
baMeans = baSumm %>% filter(pop.i != pop.j, depth.j == "Mesophotic", depth.i == "Mesophotic") %>% summarise(mean = mean(mean), sd = sd(.$mean), se = sd(.$mean)/sqrt(nrow(.))) %>% mutate(dataset = "Mesophotic -> Mesophotic") %>% bind_rows(baMeans, .)
#shallow -> mesophotic
baMeans = baSumm %>% filter(pop.i != pop.j, depth.j == "Shallow", depth.i == "Mesophotic") %>% summarise(mean = mean(.$mean), sd = sd(.$mean), se = sd(.$mean)/sqrt(nrow(.))) %>% mutate(dataset = "Shallow -> Mesophotic") %>% bind_rows(baMeans, .)
#shallow -> shallow
baMeans = baSumm %>% filter(pop.i != pop.j, depth.j == "Shallow", depth.i == "Shallow") %>% summarise(mean = round(mean(.$mean), 3), sd = round(sd(.$mean), 3), se = round(sd(.$mean)/sqrt(nrow(.)), 3)) %>% mutate(dataset = paste("Shallow -> Shallow")) %>% bind_rows(baMeans, .) %>% relocate(dataset, .before = mean) %>% as.data.frame()
baMeans[,c(2:4)] = baMeans[,c(2:4)] %>% round(3)
baMeans
baMeansTabPub = baMeans %>%
flextable() %>%
flextable::compose(part = "header", j = "dataset", value = as_paragraph("Dataset")) %>%
flextable::compose(part = "header", j = "mean", value = as_paragraph(as_i("m"))) %>%
flextable::compose(part = "header", j = "sd", value = as_paragraph("SD")) %>%
flextable::compose(part = "header", j = "se", value = as_paragraph("SEM")) %>%
# flextable::compose(part = "header", j = "Rab", value = as_paragraph(as_i("R"), as_i(as_sub("AB")))) %>%
flextable::font(fontname = "Times New Roman", part = "all") %>%
flextable::fontsize(size = 10, part = "all") %>%
flextable::bold(part = "header") %>%
flextable::align(align = "left", part = "all") %>%
flextable::autofit()
#MigrationPlot
baSumm$mean = sprintf('%.3f', baSumm$mean)
baSumm$mean2 = baSumm$mean
baSumm$hpdLow = sprintf('%.3f', baSumm$hpdLow)
baSumm$hpdHigh = sprintf('%.3f', baSumm$hpdHigh)
colPal = c(paletteer_d("vapeplot::vaporwave")[c(7,10,11,14,1,5,3)], "slateblue4")
migrateA = ggplot(data = baSumm, aes(pop.i, pop.j))+
geom_tile(data = subset(baSumm, subset = baSumm$mean2>0.67), aes(fill = as.numeric(as.character(mean2))), color = "white") +
#geom_segment(data = baSumm, aes(x = 0.4755, xend = -0.625, y = pop.j, yend = pop.j, color = pop.j), size = 14) +
geom_segment(data = baSumm, aes(x = -0.45, xend = 0.45, y = pop.j, yend = pop.j, color = pop.j), size = 15) +
#geom_segment(data = baSumm, aes(x = pop.i, xend = pop.i, y = 0.45, yend = -0.425, color = pop.i), size = 32.25) +
geom_segment(data = baSumm, aes(x = pop.i, xend = pop.i, y = 0.45, yend = -0.35, color = pop.i), size = 35) +
scale_color_manual(values = colPal[c(1:3,5:8, 2:8)], guide = NULL) +
scale_fill_gradient(low = "grey70", high = "grey5", limit = c(0.67, 0.87), space = "Lab", name = expression(paste(italic("m"[r]))),  guide = "colourbar", breaks = c(0.65, 0.70, 0.75, 0.80, 0.85, 0.90, 0.95)) +
guides(fill = guide_colorbar(ticks.colour = "black")) +
new_scale("fill") +
geom_tile(data = subset(baSumm, subset = baSumm$mean<0.67), aes(fill = as.numeric(as.character(mean))), color = "white") +
scale_fill_gradientn(colours = paletteer_c("viridis::viridis", n = 10)[3:10], limit = c(0,0.24), space = "Lab", name = expression(paste(italic("m"[i]))), na.value = "transparent",  guide = "colourbar", values = c(0, 0.05, 0.1, 0.15, 0.2,0.5,0.75,1)) +
geom_text(data = baSumm, aes(x = pop.i, y = pop.j, label = paste(mean, "\n", sep = "")), color = ifelse(baSumm$mean > 0.6, "white", "black"), fontface = ifelse(baSumm$hpdLow > 0.001, "bold", "plain"), size = ifelse(baSumm$hpdLow > 0.001, 4, 3)) +
geom_text(data = baSumm, aes(x = pop.i, y = pop.j, label = paste("\n(",hpdLow,"–",hpdHigh, ")", sep = "")), color = ifelse(baSumm$mean > 0.6, "white", "black"), fontface = ifelse(baSumm$hpdLow > 0.001, "bold", "plain"), size = ifelse(baSumm$hpdLow > 0.001, 4, 3)) +
labs(x = "Sink", y = "Source") +
# guides(fill = guide_colorbar(barwidth = 1, barheight = 12, title.position = "top", title.hjust = 0.5, frame.colour = "black", frame.linewidth = 1, ticks.colour = "black")) +
scale_y_discrete(limits = rev(levels(baSumm$pop.i))[c(1:14)], position = "left") +
# scale_x_discrete() +
coord_cartesian(xlim = c(1, 14), ylim = c(1, 14), clip = "off") +
theme_minimal()
migrate = migrateA + theme(
axis.text.x = element_text(vjust = 1, size = 10, hjust = 0.5, color = "black", face= "bold"),
axis.text.y = element_text(size = 10, color = "black",hjust = 0.5, face= "bold"),
axis.title.x = element_text(size = 14, vjust=0.1),
axis.title.y = element_text(size = 14, margin = margin(r = 10)),
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
legend.position = "right",
legend.direction = "vertical",
legend.title = element_text(size = 14, face = "bold"),
legend.text = element_text(size = 10)
)
migrate
ggsave("../figures/fig6.png", plot = migrate, width = 45, height = 20, units = "cm", dpi = 300)
